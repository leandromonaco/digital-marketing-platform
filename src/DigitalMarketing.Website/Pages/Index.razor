@page "/"


@using DigitalMarketing.Website.Components
@using DigitalMarketing.Core.Database
@using DigitalMarketing.Model.Settings
@using Microsoft.AspNetCore.Http
@using  DigitalMarketing.Model
@using  DigitalMarketing.Model.Extensions
@using DigitalMarketing.Model.Helpers
@using Microsoft.AspNetCore.Components.Web.Extensions.Head
@inject DigitalMarketing.Model.DatabaseRepository DatabaseRepository
@inject IHttpContextAccessor httpContextAccessor

<div class="nav-container">
    <NavigationBar></NavigationBar>
</div>


@if (_tenant != null && _configuration != null)
{
    <Title Value="@_tenant.Name"></Title>

    var homePage = _configuration.Pages[0];


    foreach (var module in homePage.Sections)
    {
        switch (module.Type)
        {
            case "Alert":
                <Alert Tenant="@_tenant" Section="@module"></Alert>
                break;
            case "Cover":
                <Cover Tenant="@_tenant" Section="@module"></Cover>
                break;
            case "CallToAction":
                <CallToAction Tenant="@_tenant" Section="@module"></CallToAction>
                break;
            case "Carrousel":
                <Carrousel Tenant="@_tenant" Section="@module"></Carrousel>
                break;
            case "Gallery":
                <Gallery Tenant="@_tenant" Section="@module"></Gallery>
                break;
            case "Countdown":
                <Countdown Tenant="@_tenant" Section="@module"></Countdown>
                break;
            case "ContactForm":
                <ContactForm Tenant="@_tenant" Configuration="@_configuration" Section="@module"></ContactForm>
                break;
            case "Map":
                <Map Tenant="@_tenant" Configuration="@_configuration" Section="@module"></Map>
                break;
            case "ContentImage":
                <ContentImage Tenant="@_tenant" Section="@module"></ContentImage>
                break;
            case "PricingPlans":
                <PricingPlans Tenant="@_tenant" Section="@module"></PricingPlans>
                break;
            case "Footer":
                <Footer Tenant="@_tenant" Section="@module"></Footer>
                break;
        }
    }
}

@code
{
    Tenant _tenant;
    TenantConfigurationModel _configuration;

    protected async override void OnInitialized()
    {
        _tenant = await SiteHelper.IdentifyTenant(httpContextAccessor.HttpContext.Request.Host.Value);
        _configuration = _tenant.LoadConfiguration(httpContextAccessor.HttpContext.Request.Host.Value);
    }
}